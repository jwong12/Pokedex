{"version":3,"sources":["components/Card.jsx","components/PokeCards.jsx","components/PokedexApp.jsx","App.js","serviceWorker.js","index.js"],"names":["Card","props","getSprites","bind","getBgColorFromType","obj","spriteLinks","property","push","reverse","map","link","key","data-src","type","name","id","className","css","this","types","substring","toUpperCase","sprites","percent","stats","base_stat","strokeWidth","strokeColor","trailWidth","abilities","length","item","ability","height","toFixed","weight","React","Component","PokeCards","pokeCards","pokemon","PokedexApp","wrapperRef","createRef","state","pokeData","pokeNames","cards","suggestions","text","handleTextChange","handleKeyPress","handleSearchClick","renderSuggestions","closeSuggestions","fetchPokemonNames","document","addEventListener","removeEventListener","fetch","then","response","json","data","setState","results","fetchRandomPokemons","catch","err","console","log","pokemonCards","i","Math","floor","random","e","value","target","regex","RegExp","sort","filter","v","test","slice","trim","fetchPokemonDetails","toLowerCase","onClick","suggestionSelected","event","current","contains","src","alt","ref","onChange","onKeyPress","placeholder","autoComplete","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cc4ccc1e.chunk.js","sourcesContent":["import React from 'react';\nimport { Line } from 'rc-progress';\nimport { css } from 'emotion';\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\nimport '../stylesheets/Card.scss';\n\nclass Card extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.getSprites = this.getSprites.bind(this);\n\t\tthis.getBgColorFromType = this.getBgColorFromType.bind(this);\n\t}\n\n\tgetSprites(obj) {\n\t\tconst spriteLinks = [];\n\n\t\tfor (const property in obj) {\n\t\t\tif (property !== \"other\" && property !== \"versions\" && obj[property] !== null) {\n\t\t\t\tspriteLinks.push(obj[property]);\n\t\t\t}\n\t\t}\n\t\tspriteLinks.reverse();\n\t\t\n\t\treturn (\n\t\t\t<AwesomeSlider>\n\t\t\t\t{spriteLinks.map((link) => \n\t\t\t\t\t<div key={link} data-src={link} />\n\t\t\t\t)}\n\t\t\t</AwesomeSlider>\n\t\t);\n\t}\n\n\tgetBgColorFromType(type) {\n\t\tswitch (type.name) {\n\t\t\tcase 'fairy':\n\t\t\t\treturn '#ff8fbd';\n\t\t\tcase 'psychic':\n\t\t\tcase 'poison':\n\t\t\tcase 'ghost':\n\t\t\t\treturn '#deb8f7';\n\t\t\tcase 'grass':\n\t\t\tcase 'bug':\n\t\t\t\treturn '#84ce84';\n\t\t\tcase 'fire':\n\t\t\t\treturn '#ff8686';\n\t\t\tcase 'ice':\n\t\t\tcase 'water':\n\t\t\t\treturn '#a8dfff';\n\t\t\tcase 'rock':\n\t\t\tcase 'steel':\n\t\t\t\treturn '#c5c4bc';\n\t\t\tcase 'electric':\n\t\t\t\treturn '#ffec8f';\n\t\t\tcase 'flying':\n\t\t\tdefault:\n\t\t\t\treturn '#f1f1f1';\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"card-wrapper\"\n\t\t\t\tclassName={css`\n\t\t\t\tbackground-color: ${this.getBgColorFromType(this.props.types[0].type)} \n\t\t\t`}>\n\t\t\t\t<span id=\"poke-title\">{this.props.name.substring(0, 1).toUpperCase() + this.props.name.substring(1)}</span><br/>\n\t\t\t\t{ this.getSprites(this.props.sprites) }\n\t\t\t\t<div id=\"description-wrapper\">\n\t\t\t\t\t<div className=\"description-item\">\n\t\t\t\t\t\t<span className=\"left-column\">Health:</span>\n\t\t\t\t\t\t<div className=\"right-column-line\">\n\t\t\t\t\t\t\t<Line percent={this.props.stats[0].base_stat} strokeWidth=\"8\" strokeColor=\"#e30000\" trailWidth=\"8\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"description-item\">\n\t\t\t\t\t\t<span className=\"left-column\">Speed:</span>\n\t\t\t\t\t\t<div className=\"right-column-line\">\n\t\t\t\t\t\t\t<Line percent={this.props.stats[5].base_stat} strokeWidth=\"8\" strokeColor=\"#8500de\" trailWidth=\"8\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"description-item\">\n\t\t\t\t\t\t<span className=\"left-column\">Abilities:</span>\n\t\t\t\t\t\t{this.props.abilities.length > 0 \n\t\t\t\t\t\t\t? \t<div className=\"right-column\">\n\t\t\t\t\t\t\t\t\t{this.props.abilities.map((item) => \n\t\t\t\t\t\t\t\t\t\t<p key={item.ability.name}\n\t\t\t\t\t\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\t\t\t\tfont-weight: bold; \n\t\t\t\t\t\t\t\t\t\t`}>\n\t\t\t\t\t\t\t\t\t\t\t{item.ability.name.substring(0, 1).toUpperCase() + item.ability.name.substring(1)}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t: \t<div className=\"right-column\">\n\t\t\t\t\t\t\t\t\t<p className={css`font-weight: bold;`}>Unknown</p>\n\t\t\t\t\t\t\t  \t</div>\n\t\t\t\t\t\t}\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"description-item\">\n\t\t\t\t\t\t<span className=\"left-column\">Attack/Defense:</span>\n\t\t\t\t\t\t<div className=\"right-column\">\n\t\t\t\t\t\t\t<span>{this.props.stats[1].base_stat}/{this.props.stats[2].base_stat}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"description-item\">\n\t\t\t\t\t\t<span className=\"left-column\">Special-Atk/Def:</span>\n\t\t\t\t\t\t<div className=\"right-column\">\n\t\t\t\t\t\t\t<span>{this.props.stats[3].base_stat}/{this.props.stats[4].base_stat}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"description-item\">\n\t\t\t\t\t\t<span className=\"left-column\">Height:</span>\n\t\t\t\t\t\t<div className=\"right-column\">\n\t\t\t\t\t\t\t<span>{this.props.height < 12 \n\t\t\t\t\t\t\t\t? this.props.height + ' in' \n\t\t\t\t\t\t\t\t: (this.props.height / 12).toFixed() + ' ft ' \n\t\t\t\t\t\t\t\t\t+  (this.props.height % 12 === 0 ? '' : this.props.height % 12 + ' in')\n\t\t\t\t\t\t\t}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"description-item\">\n\t\t\t\t\t\t<span className=\"left-column\">Weight:</span>\n\t\t\t\t\t\t<div className=\"right-column\">\n\t\t\t\t\t\t\t<span>{this.props.weight} lbs</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"description-item\">\n\t\t\t\t\t\t<span className=\"left-column\">Types:</span>\n\t\t\t\t\t\t<div className=\"right-column\">\n\t\t\t\t\t\t\t{this.props.types.map((item) => \n\t\t\t\t\t\t\t\t<p key={item.type.name}\n\t\t\t\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\t\tfont-weight: bold; \n\t\t\t\t\t\t\t\t`}>\n\t\t\t\t\t\t\t\t\t{item.type.name.substring(0, 1).toUpperCase() + item.type.name.substring(1)}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Card;","import React from 'react';\nimport PokeCard from './Card';\nimport '../stylesheets/PokeCards.scss';\n\nclass PokeCards extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"body-content\">\n\t\t\t\t<ul>\n\t\t\t\t\t{this.props.pokeCards.map((pokemon) => \n\t\t\t\t\t\t<li key={pokemon.id}>\n\t\t\t\t\t\t\t<PokeCard {...pokemon} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PokeCards;\n","import React from 'react';\nimport PokeCards from './PokeCards';\nimport { css } from 'emotion';\nimport '../stylesheets/PokedexApp.scss';\n\nclass PokedexApp extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.wrapperRef = React.createRef();\n\t\tthis.state = {\n\t\t\tpokeData: [],\n\t\t\tpokeNames: [],\n\t\t\tcards: [],\n\t\t\tsuggestions: [],\n\t\t\ttext: '',\n\t\t};\n\n\t\tthis.handleTextChange = this.handleTextChange.bind(this);\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t\tthis.handleSearchClick = this.handleSearchClick.bind(this);\n\t\tthis.renderSuggestions = this.renderSuggestions.bind(this);\n\t\tthis.closeSuggestions = this.closeSuggestions.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchPokemonNames();\n\t\tdocument.addEventListener('mousedown', this.closeSuggestions);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener('mousedown', this.closeSuggestions);\n\t}\n\n\tfetchPokemonNames() {\n\t\tconst apiUrl = 'https://pokeapi.co/api/v2/pokemon/?limit=1050';\n\t\tfetch(apiUrl)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => this.setState({ pokeData: data.results }))\n\t\t\t.then(() => {\n\t\t\t\tconst { pokeData } = this.state;\n\t\t\t\tconst pokeNames = [];\n\n\t\t\t\tfor (let item of pokeData) {\n\t\t\t\t\tpokeNames.push(item.name);\n\t\t\t\t}\n\t\t\t\tthis.setState({ pokeNames });\n\t\t\t})\n\t\t\t.then(() => this.fetchRandomPokemons())\n\t\t\t.catch((err) => console.log(err));\n\t}\n\n\tfetchRandomPokemons() {\n\t\tconst { pokeNames } = this.state;\n\t\tconst pokemonCards = [];\n\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tfetch('https://pokeapi.co/api/v2/pokemon/' + pokeNames[Math.floor(Math.random() * pokeNames.length)])\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\t\t\t\t\t\n\t\t\t\t\tpokemonCards.push(data);\n\t\t\t\t\tthis.setState({ cards: pokemonCards });\n\t\t\t\t})\n\t\t\t\t.catch((err) => console.log(err));\n\t\t}\n\t}\n\n\tfetchPokemonDetails(name) {\n\t\tfetch('https://pokeapi.co/api/v2/pokemon/' + name)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconst pokemonCards = [];\n\t\t\t\tpokemonCards.push(data);\n\t\t\t\tthis.setState({ \n\t\t\t\t\tcards: pokemonCards,\n\t\t\t\t\tsuggestions: []\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t}\n\n\thandleTextChange(e) {\n\t\tconst value = e.target.value;\n\t\tlet suggestions = [];\n        \n\t\tif(value.length > 0) {\n\t\t\tconst regex = new RegExp(`^${value}`, 'i');\n\t\t\tsuggestions = this.state.pokeNames.sort().filter(v => regex.test(v));\n\n\t\t\t// The number of random pokemons displayed is set to 10\n\t\t\tsuggestions = suggestions.slice(0,10); \n\t\t}\n\n\t\tthis.setState(() => ({ suggestions, text: value }));\n\t}\n\n\thandleKeyPress(e) {\n\t\tif(e.key === 'Enter'){\n\t\t\tthis.handleSearchClick();\n\t\t}\n\t}\n\n\thandleSearchClick() {\n\t\tconst { text } = this.state;\n\n\t\tif (text.trim() === \"\") {\n\t\t\tthis.fetchRandomPokemons();\n\t\t} else {\n\t\t\tthis.fetchPokemonDetails(text.toLowerCase().trim(), false);\n\t\t}\n\t}\n\n\tsuggestionSelected (value) {\n\t\tthis.setState(() => ({ \n\t\t\ttext: value,\n\t\t\tsuggestions: []\n\t\t}), () => this.handleSearchClick());\n\t}\n\n\trenderSuggestions() {\n\t\tconst { suggestions } = this.state;\n\t\tif (suggestions.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<ul>\n\t\t\t\t{suggestions.map((item) => \n\t\t\t\t\t<li key={item} onClick={() => this.suggestionSelected(item)}>{item}</li>\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t);\n\t}\n\t\n\tcloseSuggestions(event) {\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\n            this.setState(() => ({ \n                suggestions: []\n            }));\n        }\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<img \n\t\t\t\t\tsrc=\"./images/pokemon-banner.svg\" \n\t\t\t\t\talt=\"Pokemon banner\"\n\t\t\t\t\tclassName={css`\n\t\t\t\t\twidth: 450px;\n\t\t\t\t\tpadding: 20px 0;\n\t\t\t\t`}/><br/>\n\t\t\t\t<h1>Pokedex App</h1>\n\t\t\t\t<div id=\"search-wrapper\" ref={this.wrapperRef} >\n\t\t\t\t\t<div id=\"search-container\">\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t\t\t\tonChange={this.handleTextChange}\n\t\t\t\t\t\t\tonKeyPress={this.handleKeyPress}\n\t\t\t\t\t\t\tid=\"search-bar\" \n\t\t\t\t\t\t\tplaceholder=\"Search pokemon...\"\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div id=\"button-wrapper\">\n\t\t\t\t\t\t\t<img \n\t\t\t\t\t\t\t\tsrc=\"./images/search.svg\" \n\t\t\t\t\t\t\t\tonClick={this.handleSearchClick}\n\t\t\t\t\t\t\t\tid=\"search-button\" \n\t\t\t\t\t\t\t\talt=\"Search icon\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.renderSuggestions()}\n\t\t\t\t</div><br/>\n\t\t\t\t<PokeCards pokeCards={this.state.cards} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PokedexApp;\n","import React from 'react';\nimport './App.css';\nimport PokedexApp from './components/PokedexApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PokedexApp />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}